// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Seeder {
  id String @id @default(uuid())
  name String
  description String
  isDone Boolean @default(false)
}

model User {
  id        String   @id @default(uuid())
  authId    String   @unique
  userNameNutritrack String
  showPublicDiet Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  meals Meal[]
}

model MealType {
  idMealType String  @id @default(uuid())
  name String
  meals Meal[]
}

model Ingredient {
  idIngredient String  @id @default(uuid())
  name String
  description String

  ingredientCalories IngredientCalories[]
}

model IngredientCalories {
  idIngredientCalories String  @id @default(uuid())
  idIngredient String
  ingredient Ingredient @relation(fields: [idIngredient], references: [idIngredient])
  calories Decimal
  idQuantityUnit String
  quantityIngredient Decimal // should be used to calculate the calories with grams or ml or other not for cups or spoons
  
  quantityUnit QuantityUnit @relation(fields: [idQuantityUnit], references: [idQuantityUnit])

}

model QuantityUnit {
  idQuantityUnit String  @id @default(uuid())
  name String
  quantity Decimal 
  shortName String @default("g")

  ingredientCalories IngredientCalories[]
}

model Meal {
  idMeal String  @id @default(uuid())
  name String
  description String
  pictureUrl String
  mealTypeId String
  mealType MealType @relation(fields: [mealTypeId], references: [idMealType])
  dateMeal DateTime @db.Date
  userId String
  user User @relation(fields: [userId], references: [id])
}